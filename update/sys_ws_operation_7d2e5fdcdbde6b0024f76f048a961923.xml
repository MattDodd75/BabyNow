<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ws_operation">
    <sys_ws_operation action="INSERT_OR_UPDATE">
        <active>true</active>
        <consumes>application/json</consumes>
        <consumes_customized>false</consumes_customized>
        <default_operation_uri/>
        <enforce_acl>cf9d01d3e73003009d6247e603f6a990</enforce_acl>
        <http_method>POST</http_method>
        <name>baby_diaper</name>
        <operation_script><![CDATA[(function process(/*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {

	//determine the actions to be carried out
	var data = request.body.data;
	var action = data.action;//request.queryParams.action;
	var diaper_state = request.queryParams.state;
	var writer = response.getStreamWriter();
	var hdrs = {};
	gs.info('Debug: ' + JSON.stringify(action));
	//gs.info(data + "("+ typeof data +")");

	//var x=request.body.data;
	var message=('Debug: ' + JSON.stringify(action));//'';
	var status ='';
	var gr;
	//var data={};	

	if(action=='diaper_add') {
		gr = new GlideRecord("x_snc_babynow_baby_diaper_records");
		gr.diaper_state = diaper_state; // 'dirty' or 'wet' or 'mixed'
		gr.timestamp = new GlideDateTime();
		gr.baby = "Calvin";
		gr.comments = 'Added by Google Assistant';
		if(gr.insert()) {
			message='Ok, its recorded.';
			context='success';
			response.setStatus(200);
		}
	}
	else if (action=='diaper_check') { 
		gr = new GlideRecord("x_snc_babynow_baby_diaper_records");
		gr.orderByDesc("timestamp");
		gr.setLimit(1);
		gr.query();
		if(gr.next()) {
			var changeDate = new GlideDateTime(gr.timestamp);
			var nowDate = new GlideDateTime();
			var durHours = (nowDate.getNumericValue()-changeDate.getNumericValue())/1000/60/60;
			if(durHours > 1) {
				message='Last changed '+ durHours.toFixed(1) +' hours ago';}
			else {
				message='Last changed '+ (durHours*60).toFixed(0) +' minutes ago';}
			context='success';
			response.setStatus(200);
		}
	}
	else {
		message+='Invalid action "' + action + '" specified';
		context='failure';
		response.setStatus(400);
	}

	hdrs['Content-Type'] = 'application/json';

	response.setHeaders(hdrs);

	var response_body = {
		"fulfillmentText": message,
		"payload":{
			"google": {
				"expectUserResponse": true,
				"richResponse": {
					"items": [
						{
							"simpleResponse": {
								"textToSpeech": message
							}
						}
					]
				}
			}
		}
	};
	writer.writeString(global.JSON.stringify(response_body));

})(request, response);]]></operation_script>
        <operation_uri>/api/x_snc_babynow/babynow</operation_uri>
        <produces>application/json,application/xml,text/xml</produces>
        <produces_customized>false</produces_customized>
        <relative_path>/</relative_path>
        <request_example/>
        <requires_acl_authorization>true</requires_acl_authorization>
        <requires_authentication>true</requires_authentication>
        <requires_snc_internal_role>false</requires_snc_internal_role>
        <short_description/>
        <sys_class_name>sys_ws_operation</sys_class_name>
        <sys_created_by>matt.dodd</sys_created_by>
        <sys_created_on>2018-12-07 01:48:12</sys_created_on>
        <sys_id>7d2e5fdcdbde6b0024f76f048a961923</sys_id>
        <sys_mod_count>50</sys_mod_count>
        <sys_name>baby_diaper</sys_name>
        <sys_package display_value="BabyNow" source="x_snc_babynow">1e43423113ca2300f51379304244b0d3</sys_package>
        <sys_policy/>
        <sys_scope display_value="BabyNow">1e43423113ca2300f51379304244b0d3</sys_scope>
        <sys_update_name>sys_ws_operation_7d2e5fdcdbde6b0024f76f048a961923</sys_update_name>
        <sys_updated_by>matt.dodd</sys_updated_by>
        <sys_updated_on>2019-01-04 07:53:58</sys_updated_on>
        <web_service_definition display_value="BabyNow">8dfb65f7db4ee70024f76f048a961947</web_service_definition>
        <web_service_version/>
    </sys_ws_operation>
</record_update>
